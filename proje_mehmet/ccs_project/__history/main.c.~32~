#include<18F4431.h> 
#fuses INTRC_IO, NOWDT, NOPROTECT, NOBROWNOUT, PUT, NOLVP 
#use delay(clock=8000000) 

#define POWER_PWM_PERIOD 1999  // 1 KHz pwm freq with 8 MHz osc. 

//======================================= 
void main() 
{ 

setup_ccp1(CCP_PWM); // Configure CCP1 as a PWM 
setup_ccp2(CCP_PWM); // Configure CCP2 as a PWM 

setup_timer_2(T2_DIV_BY_16, 249, 1);  // 500 Hz PWM freq with 8 MHz osc 
set_pwm1_duty(63);  // 25% duty cycle on pin C2  (CCP1) 
set_pwm2_duty(125); // 50% duty cycle on pin C1  (CCP2) 


// Setup the 4 Power PWM channels as ordinary pwm channels. 
setup_power_pwm_pins(PWM_COMPLEMENTARY, PWM_COMPLEMENTARY, PWM_COMPLEMENTARY, PWM_COMPLEMENTARY); 

// Mode = Free Run  
// Postscale = 1   (1-16) Timebase output postscaler 
// TimeBase = 0   (0-65355) Initial value of PWM Timebase 
// Period = 2000  (0-4095) Max value of PWM TimeBase 
// Compare = 0     (Timebase value for special event trigger) 
// Compare Postscale = 1 (Postscaler for Compare value) 
// Dead Time 

setup_power_pwm(PWM_FREE_RUN, 1, 0, POWER_PWM_PERIOD, 0, 1,0);  

set_power_pwm0_duty((int16)((POWER_PWM_PERIOD *4) * .1)); // 10% 
set_power_pwm2_duty((int16)((POWER_PWM_PERIOD *4) * .4)); // 40% 
set_power_pwm4_duty((int16)((POWER_PWM_PERIOD *4) * .6)); // 60% 
set_power_pwm6_duty((int16)((POWER_PWM_PERIOD *4) * .75)); // 75%    

while(TRUE); 
}
